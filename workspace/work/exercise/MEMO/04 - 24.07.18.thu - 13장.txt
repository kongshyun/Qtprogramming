DAY4 24.07.18 [13장]


Title : To variable
================================================================
	variable = storage ( L-value)
	
int func()
{
	int li=1;
	int lni	;	
	{
		itn li=2;
		int lni ;		
		
		printf("%d",li);    //2
	}
	printf("%d",li);    //1
}




Title : To static variable
========================================================
//static과 그냥 차이

int i;

void func()
{
	static int i=0;
	printf("%d",i);
	i++;



}
int main()
{
	func(); //0
	func(); //1
	func(); //2
	func(); //3					--> static int i =0; 이 아니면 func()는 0이 찍힘.
}

----------------------------------------------
//전역변수로 사용할때

int i=0;		//.DATA영역

void func()
{
	printf("%d",i);
	i++;
}

int main()
{
	func(); //0
	func(); //1
	func(); //2
	func(); //3	
}

----------------------------------------------
	
int func()
{
	{
		static int li = 0;	//.DATA
		static int lni ;	//.BSS
		li++;
	}
	printf("%d",li); //
	
}

변수가 살아있다. (alive):변수 주소값유지
	
	scope:
	lifetime: 


Title To c program building seq.
===============================================
a.c		:c-source / ASCII
	#include
	#define
	(pre-processing by proccessor)
	
	gcc -E
	
a.i		:intermediate file /ASCII
	(compile)
	gcc -S
	
a.s 	:assembly file /ASCII
	(assemble)
	gcc-c 
	
a.o 	:object file/ ELF
	.TeXT
	.DATA
	.BSS
	.RDATA
		
	(location/
	
a.exe 	: executable file / ELF

--------------------------------------------
함수 이름 앞에 static
   ->? 그 함수 안에서 찾으려고,,,? 
   
   
   
------------------------





















